<template>
    <div id=${`${key}-container`}>
        <div id="${key}" class="p5-container ${className}">
        </div>
    </div>
</template>
<style>
    .p5-container {
        display: flex !important;
        flex-direction: row !important;
        flex: 1 1 auto;
        max-width: 100% !important;
        height: auto !important;
        justify-content: center !important;
        overflow: hidden !important;
    }
    canvas.p5Canvas {
        /* position: fixed !important; */
        z-index: -3 !important;
    }
</style>
<script>
    import p5 from 'p5'
    // import p5Sound from 'p5/lib/addons/p5.sound.min.js'
    export default (props, { $, $f7, $update, $onMounted, $onBeforeMount, ...options  }) => {
        console.log(options)
        $onBeforeMount(() => {
        $update()
        if (typeof window !== "undefined") {
            if (!window.p5) window.p5 = p5
            // window.p5Sound = p5Sound
        }
        })
        const className = props.class ?? ""
        var key = props.keyid ?? 'sketch' 
        console.log("ðŸš€ ~ file: index.f7 ~ line 35 ~ key", key)
        var sketchFunction =  (p) => {
            p.setup = () => {
                p.createCanvas(window.innerWidth, window.innerHeight)
                p.background('#4558ba')
                console.log('p5.js setup function executed!')
            }

        }
        var sketch =  props.sketch ?? sketchFunction
        var instance
        $onMounted(() => {
            instance = new p5(sketch, key)
            instance._userNode = key
            console.log("ðŸš€ ~ file: index.f7 ~ line 49 ~ $onMounted ~ instance", instance)
        })
        return $render
    }
</script>