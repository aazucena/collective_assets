<template>
    <div class="page" data-name="collections" aria-hidden="true">
        <div class="navbar no-shadow">
            <div class="navbar-bg transparent"></div>
            <div class="navbar-inner">
                <div class="left">
                    <a class="link" href="/menu/">
                        <i class="icon icon-back"></i>
                    </a>
                </div>
                <div class="right">
                    <a href="#" class="link icon-only" @click=${toggleMute}>
                        <i class="f7-icons" id="mute-collections">speaker_slash</i>
                    </a>
                </div>
            </div>
        </div>
        <div class="page-content">
            <div class="block-title color-white">Asset Collections</div>
            <div class="grid-layout display-flex flex-direction-column justify-content-center">
                ${new Array(rows).fill(null).map((_, row) => $h`
                    <div class="row w-100">
                        ${((row * cols)+0) < size && $h`
                            <div class="col-33 resizable display-flex justify-content-center">
                                <${Asset} index=${((row * cols)+0)} item=${collections[((row * cols)+0)]} />
                            </div>
                        `}
                        ${((row * cols)+1) < size && $h`
                            <div class="col-33 resizable display-flex justify-content-center">
                                <${Asset} index=${((row * cols)+1)} item=${collections[((row * cols)+1)]} />
                            </div>
                        `}
                        ${((row * cols)+1) < size && $h`
                            <div class="col-33 resizable display-flex justify-content-center">
                                <${Asset} index=${((row * cols)+2)} item=${collections[((row * cols)+2)]} />
                            </div>
                        `}
                    </div>
                `)}
            </div>
        </div>
    </div>
</template>
<style>
    .block-title {
        color: white;
    }
    .col {
        padding: 1rem;
    }
    .grid-layout {
        --f7-grid-row-gap: 2rem;
        padding: 0.75rem;
    }
    .page-content {
        background-color: #1f203c !important;
        color: white;
    }
</style>
<script>
    import Asset from '@/components/asset.f7'
    import jukebox from '../js/utilities/jukebox.js'
    export default (props, { $on, $, $store }) => {
        var items = $store.getters.assets
        var history = $store.getters.history
        var ost = jukebox['collections']
        var mute = false
        var size = items.value.length
        var cols = 3
        var rows = Math.ceil(size/cols)
        var historyItems = history.value.map((it) => ({ name: it.asset.data.name, rarity: it.asset.data.rarity.name, category: it.asset.data.category.name }))
        var collections = items.value.map((item) => {
            return {
                ...item,
                owned: historyItems.length > 0 && !!historyItems.find(hitem => hitem.name === item.name && hitem.category === item.category && hitem.rarity === item.rarity)
            }
        }).sort((a, b) => Number(b.owned) - Number(a.owned))
        $on('pageInit', () => {
            ost.play()
        })
        $on('pageBeforeOut', () => {
            ost.stop()
        })
        const toggleMute = () => {
            mute = !mute
            $('#mute-collections').text(mute === true ? 'speaker_slash_fill' : 'speaker_slash')
            ost.mute(mute)
        }
        var value = 0
        var mod = 1
        var key = 'collections'
        return $render;
    }
</script>